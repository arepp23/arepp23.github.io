<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Austin Repp</title>
    <link>/tags/javascript/</link>
    <description>Recent content in javascript on Austin Repp</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 20 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to fix: Express.js Request Body is Undefined</title>
      <link>/express-js-req-body-undefined/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/express-js-req-body-undefined/</guid>
      <description>express.bodyParser() is no longer bundled with express. You can install it using npm i body-parser.
Fixing the error The code below shows how you can include bodyParser, and by extension jsonParser. Then, simply list jsonParser as the second argument in your POST method, and you will no longer have an undefined request body.
const app = express(); var bodyParser = require(&amp;#34;body-parser&amp;#34;); var jsonParser = bodyParser.json(); // POST /endpoint expects JSON body app.</description>
    </item>
    
    <item>
      <title>Safe eval alternative in Javascript</title>
      <link>/javascript-safe-eval/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/javascript-safe-eval/</guid>
      <description>A problem I encountered while creating Discord Bot Studio, was allowing users to enter variables which could be evaluated at runtime. Discord Bot Studio is a visual programming tool, so I felt it was important to offer a familiar variable syntax. Ideally, I wanted a user to be able to type a variable using the following notation, and have it be replaced with that variable&amp;rsquo;s value at runtime:
An example would be if I have an object as follows:</description>
    </item>
    
  </channel>
</rss>